/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newlotto;

import java.awt.Desktop;
import java.awt.HeadlessException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.JOptionPane;
/**
 *
 * @author b43145
 */
public class lottoNew extends javax.swing.JFrame {
 public static String playerName;
  public static String playerSurname;
      public static int descision;
      public static double money;
      public static double money2;
      public static double perc;
      public static int same;
      public static int i;
      public static double initial;
   //   public static double initial2;

      public static int[] playerNumber;
     public static String email;
      public static int[] lottoNumber;
     

      public Connection cn;
        public Statement st;
        Connection con = null;
        PreparedStatement pst = null;
        PreparedStatement pst2 = null;
        ResultSet rs = null;
      
    /**
     * Creates new form lottoNew
     */
    public lottoNew() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        User1 = new javax.swing.JTextField();
        Pass1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 102, 0));

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setForeground(new java.awt.Color(255, 153, 51));
        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Dawson's Lotto Machine");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel1)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        User1.setText("jTextField1");

        Pass1.setText("jPasswordField1");

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setForeground(new java.awt.Color(255, 153, 51));
        jButton2.setText("Visit site");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Pass1)
                    .addComponent(User1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(User1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Pass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(96, 96, 96))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setText("How to play");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         Help f = new Help();
       f.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        

String sql="select * from accounts where Username=? and Password=?";
try{
con = DriverManager.getConnection("jdbc:mysql://localhost:3307/lotto","root","");
pst=con.prepareStatement(sql);
pst.setString(1, User1.getText());
pst.setString(2,Pass1.getText());
rs=pst.executeQuery();
if(rs.next())
{
JOptionPane.showMessageDialog(null,"username and password matched");
         Scanner reader = new Scanner(System.in);  
         System.out.println("Dawson's LottoMachine ");      
         System.out.println("Enter your name ");       
     playerName = reader.next();
    user(playerName);
    user1(playerName);
    boolean bool2 = true;
    
     do{
    System.out.println("Enter your initial deposit "); 
    initial = reader.nextDouble();
    

    // initialMethod(initial);
     }while(initial > 20000);

    descision = 0;
  while(descision != 2){
      System.out.println("Enter which ticket you will like to purchase");
   System.out.println("(3.00 = $3, 5.00 = $5, 10.00 = $10)");
   money = reader.nextDouble();
      ticket(money);
       ticket1(money);
      playerNumbers();
       
      lottoNumbers();
      checking();
     // winnings(money,same);
      winnings1(money,same);
      con.close();
      insert();
         System.out.println("Press 1 to play again, press 2 to exit");
        descision = reader.nextInt();
      playAgain(descision);
      playAgain1(descision);

     
  }
}
else
{
JOptionPane.showMessageDialog(null, "username and password do not matched");
}
}
catch(SQLException | HeadlessException ex)
{
JOptionPane.showMessageDialog(null,ex);
}
     
        
      


 
        
        
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        openWebpage("http://localhost:8084/dashboard/assignment/project/project.html");
    }//GEN-LAST:event_jButton2ActionPerformed
public String user(String playerName){
    String newName = playerName.toUpperCase();
    return newName;
}    
public String user1(String playerName){
     Scanner reader = new Scanner(System.in);  
     boolean cons = false;
     
      System.out.println("Enter your surname ");       
     playerSurname = reader.next();
     
      //  int age = reader.nextInt();
              boolean con = true;

      do{
                    System.out.println("Enter your age ");      
        String age = reader.next();  
        //String age1 = Integer.toString(age);
        boolean numeric = true;

        numeric = age.matches("-?\\d+(\\.\\d+)?");
        if(numeric){
            System.out.println(age + " is a number");
               int age1 = Integer.parseInt(age);
                if (age1<18){
                    System.out.println("You are too young to play! ");
                    System.exit(0);
                     };
                     con = false;
                     break;
        }
        else{
            System.out.println(age + " is not a number");
            con = true;
        }
      }while (con = true);

       
            
   


return playerName;
    
} 

  

    

public static String openWebpage(String urlString) {
    try {
        Desktop.getDesktop().browse(new URL(urlString).toURI());
    } catch (Exception e) {
        e.printStackTrace();
    }
    return urlString;
}
public double ticket(double money){
   
   return money;
}

public double ticket1(double money){
   Scanner reader = new Scanner(System.in);
    
   
   System.out.println("Do you have a discount code?");
   System.out.println("Press Y for yes or press N for no");
   String discount = reader.next();
   perc = 0;
   if(discount.equals("y") || discount.equals("Y" )){
       System.out.println("Enter the discount code ");
       String discount2 = reader.next();
       if(discount2.equals("ABC123")){
            perc = 0.5;
            double money2 = money * perc;
            initial = initial + money2;
            System.out.println(" You have saved a total " + money2 + " due to the discount");
            System.out.println(" ");
            
       }
       else{
            System.out.println("Invalid Discount Code ");
             System.out.println(" ");
             perc = 0;
       }
   }
   else{
       perc = 0;
       System.out.println(" ");
   }
   return money;
}

public void playerNumbers(){
     Scanner reader = new Scanner(System.in);
 System.out.println("Enter numbers between 1 and 25");           
            playerNumber = new int[6];
            for(int i=1; i<6; i++)                                        
            {
                String s = "";
                switch(i)
                {
                    case 1: s = "st"; break;                               
                    case 2: s = "nd"; break;                               
                    case 3: s = "rd"; break;                             
                    default: s = "th"; break;                               
                }
                System.out.println("Enter your " + i + s + " number");
                //Displaying Enter your number and i and the suffix will be shown in between

                playerNumber[i] = reader.nextInt();                       
                while(playerNumber[i] > 25 || playerNumber[i] < 1){        
                    System.out.print("Invalid Number. Try again: ");
                    playerNumber[i] = reader.nextInt();
                }
            }
}
public void lottoNumbers(){
       Scanner reader = new Scanner(System.in);
       lottoNumber = new int[5];          
            {  
                lottoNumber[0] = (int) ((25 * Math.random()) + 1);  
                lottoNumber[1] = (int) ((25 * Math.random()) + 1);  
                lottoNumber[2] = (int) ((25 * Math.random()) + 1);  
                lottoNumber[3] = (int) ((25 * Math.random()) + 1);  
                lottoNumber[4] = (int) ((25 * Math.random()) + 1);  
                
            }

            lottoNumber[0] = (int) ((25 * Math.random()) + 1);        
             i = 1;                                                
            boolean found = false;                                
            do{         
                lottoNumber[i] = (int) ((25 * Math.random()) + 1);    
                for (int j=0;j<i;j++){                                 
                    if (lottoNumber[i] == lottoNumber[j]) found=true;
                }
                if (found == false)i++;
            }while (i<5);
            int lot1 = lottoNumber[0];
            int lot2 = lottoNumber[1];
            int lot3 = lottoNumber[2];
            int lot4 = lottoNumber[3];
            int lot5 = lottoNumber[4];

              
try{
        con = DriverManager.getConnection("jdbc:mysql://localhost:3307/lotto","root","");
    //    Statement stmt = con.createStatement();
       // stmt.executeUpdate("insert into lottonumbers (LottoNum1,LottoNum2,LottoNum3,LottoNum4,LottoNum5)"
     //    + " values (lot1, lot2, lot3,lot4,lot5)");      
        String sql="INSERT INTO lottonumbers (Name, Surname, LottoNum1 , LottoNum2 , LottoNum3 , LottoNum4 , LottoNum5) "+
        " VALUES (?,?,?,?,?,?,?)";
        PreparedStatement pstmt=con.prepareStatement(sql);
        pstmt.setString(1,playerName);
        pstmt.setString(2,playerSurname);
        pstmt.setInt(3,lot1);
        pstmt.setInt(4,lot2);
        pstmt.setInt(5,lot3);
        pstmt.setInt(6,lot4);
        pstmt.setInt(7,lot5);
        pstmt.execute();
        pstmt.close();
         con.close();
         System.out.println("Record successfully added");


        }
        catch(SQLException | HeadlessException ex)
        {
        JOptionPane.showMessageDialog(null,ex);
        }
            System.out.println("Lottery Numbers: ");                    
            for(int k=0; k<5; k++)  
            {  
                try {

            Thread.sleep(2000);

            }

            catch (InterruptedException ex)

                {

             }

                System.out.println(lottoNumber[k] + " " );             
            }
            
            int lotto2 = lottoNumber[0];
 

  }

public void checking(){           
            i = 0;                                                       
             same = 0;                                               
            do{
                for (int j=0;j<5;j++){
                    if (lottoNumber[i] == playerNumber[j]) same++;
                }
                i++;
            }while (i<5);  
            System.out.println("Amount of same numbers: "+ same);      
             
}

//    public double winnings(double money, int same){
//            double winnings = 0;     
//            if(money == 3.00 && same >=1){                        
//                winnings = same  * 4.25;                                      
//                System.out.println(playerName+ ", You have won:");
//                System.out.println(" €" + winnings);
//                System.out.println("Your profit is: $" + Math.round(winnings - money));
//
//            }
//            else if(money == 5.00 && same >=1){             
//                winnings = same * 6.35;
//                System.out.println(playerName + ", You have won:");
//                System.out.println(" €" + winnings);
//                System.out.println("Your profit is: $" + Math.round(winnings - money));
//            }
//            else if(money == 10.00 && same >=1){                //if the money is 10.00 and same is larger than one or equal to 1
//                winnings = same *  13.45;
//                System.out.println(playerName + ", You have won:");
//                System.out.println(" €" + winnings);
//                System.out.println("Your profit is: $" + Math.round(winnings - money));
//            }
//            else if(money == 3.50 && same <1){              
//                System.out.println(playerName + ", none of your numbers have been drawn, better luck next time!");
//            }
//            else if(money == 5.00 && same <1){                 
//                System.out.println(playerName + ", none of your numbers have been drawn, better luck next time!");
//            }
//            else if(money == 10.00 && same <1){                 
//                System.out.println(playerName + ", none of your numbers have been drawn,better luck next time!");
//            } 
//            else if(money == 3.50 && same == 5){                 
//                System.out.println(playerName + ", Congratulations!! You have won the jackpot prize"); 
//                System.out.println(" €" + winnings);                                                    
//                System.out.println("Your profit is: $" + Math.round(winnings - money));        
//            }
//            else if(money == 5.00 && same == 5){                
//                System.out.println(playerName + ", Congratulations!! You have won the jackpot prize");
//                System.out.println(" €" + winnings);
//                System.out.println("Your profit is: $" + Math.round(winnings - money));
//            }
//            else if(money == 10.00 && same == 5){               
//                System.out.println(playerName + ", Congratulations!! You have won the jackpot prize");
//                System.out.println(" €" + winnings);
//                System.out.println("Your profit is: $" + Math.round(winnings - money));
//            } 
//          
//             return winnings;
//    }
//    
      public double winnings1(double money, int same){
             Scanner reader = new Scanner(System.in);
            double winnings = 0;    
           
            if(money == 3.00 && same >=1){                     
                winnings = same  * 4.25;                                      
                System.out.println(playerName+ ", You have won:");
             
                System.out.println(" €" + winnings);
                System.out.println("Your profit is: $" + Math.round(winnings - money));

            }
            else if(money == 5.00 && same >=1){                
                winnings = same * 6.35;
                System.out.println(playerName + ", You have won:");
              
                System.out.println(" €" + winnings);
                System.out.println("Your profit is: $" + Math.round(winnings - money));
            }
            else if(money == 10.00 && same >=1){  
               
                winnings = same *  13.45;
               
                System.out.println(playerName + ", You have won:");
                System.out.println(" €" + winnings);
                System.out.println("Your profit is: $" + Math.round(winnings - money));
            }
            else if(money == 3.50 && same <1){    
               
                System.out.println(playerName + ", none of your numbers have been drawn, better luck next time!");
            }
            else if(money == 5.00 && same <1){  
                           
                System.out.println(playerName + ", none of your numbers have been drawn, better luck next time!");
            }
            else if(money == 10.00 && same <1){  
               
                System.out.println(playerName + ", none of your numbers have been drawn,better luck next time!");
            } 
            else if(money == 3.50 && same == 5){                 
                System.out.println(playerName + ", Congratulations!! You have won the jackpot prize"); 
             
                System.out.println(" €" + winnings);                                             
                System.out.println("Your profit is: $" + Math.round(winnings - money));     
            }
            else if(money == 5.00 && same == 5){                
                System.out.println(playerName + ", Congratulations!! You have won the jackpot prize");
             
                System.out.println(" €" + winnings);
                System.out.println("Your profit is: $" + Math.round(winnings - money));
            }
            else if(money == 10.00 && same == 5){               
                System.out.println(playerName + ", Congratulations!! You have won the jackpot prize");
              
                System.out.println(" €" + winnings);
                System.out.println("Your profit is: $" + Math.round(winnings - money));
            } 
            System.out.println("                                                  ");
            System.out.println("total balance is " + initial);

            
            
            System.out.println(" Would you like to receieve a receipt as email? ");
               System.out.println("Press Y for yes or press N for no");
             String conditionEmail = reader.next();
             if(conditionEmail.equals("y") ||  conditionEmail.equals("Y" )){
              String from = USER_NAME;
                String pass = PASSWORD;
              System.out.println("What is your email?");
                 email = reader.next();
                String[] to = { email }; // list of recipient email addresses
                String subject = "Receipt";
                String body =  playerName + " you have choosen the " + money + " ticket";
                sendFromGMail(from, pass, to, subject, body);
             }
             else{
                 System.out.println("                  ");    
                System.out.println("Thanks for playing ");
             }
             return winnings;
    }
    
    public int playAgain(int decision){

        return decision;
    }
    
    public double initialMethod(double initial){
         if (initial > 20000){
         System.out.println("Too much to play! ");
    }
                  return initial;

    }

        public int playAgain1(int decision){
         Scanner reader = new Scanner(System.in);
         
        switch(descision){
            case 1: descision = 1;
            break;
            case 2: 
            descision = 2;
            System.exit(0);
            break;
            default:
                System.out.print("Invalid character exiting");
                            System.exit(0);

        }
        return decision;
    }
    
    public void insert(){
      
    }

     private static String USER_NAME = "schooltestembeddedsystems@gmail.com";  // GMail user name (just the part before "@gmail.com")
    private static String PASSWORD = "ThisIsThePassword"; // GMail password
    private static String RECIPIENT =  email;
;

  

    private static String sendFromGMail(String from, String pass, String[] to, String subject, String body) {
        Properties props = System.getProperties();
        String host = "smtp.gmail.com";
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
        props.put("mail.smtp.user", from);
        props.put("mail.smtp.password", pass);
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(props);
        MimeMessage message = new MimeMessage(session);

        try {
            message.setFrom(new InternetAddress(from));
            InternetAddress[] toAddress = new InternetAddress[to.length];

            // To get the array of addresses
            for( int i = 0; i < to.length; i++ ) {
                toAddress[i] = new InternetAddress(to[i]);
            }

            for( int i = 0; i < toAddress.length; i++) {
                message.addRecipient(Message.RecipientType.TO, toAddress[i]);
            }

            message.setSubject(subject);
            message.setText(body);
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
        }
        catch (AddressException ae) {
            ae.printStackTrace();
        }
        catch (MessagingException me) {
            me.printStackTrace();
        }
        return from;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lottoNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lottoNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lottoNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lottoNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lottoNew().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Pass1;
    private javax.swing.JTextField User1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
